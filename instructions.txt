LDA	Load Accumulator	N,Z
LDX	Load X Register	N,Z
LDY	Load Y Register	N,Z
STA	Store Accumulator	 
STX	Store X Register	 
STY	Store Y Register	 
TAX	Transfer accumulator to X	N,Z
TAY	Transfer accumulator to Y	N,Z
TXA	Transfer X to accumulator	N,Z
TYA	Transfer Y to accumulator	N,Z
TSX	Transfer stack pointer to X	N,Z
TXS	Transfer X to stack pointer	 
PHA	Push accumulator on stack	 
PHP	Push processor status on stack	 
PLA	Pull accumulator from stack	N,Z
PLP	Pull processor status from stack	All
AND	Logical AND	N,Z
EOR	Exclusive OR	N,Z
ORA	Logical Inclusive OR	N,Z
BIT	Bit Test	N,V,Z
ADC	Add with Carry	N,V,Z,C
SBC	Subtract with Carry	N,V,Z,C
CMP	Compare accumulator	N,Z,C
CPX	Compare X register	N,Z,C
CPY	Compare Y register	N,Z,C
INC	Increment a memory location	N,Z
INX	Increment the X register	N,Z
INY	Increment the Y register	N,Z
DEC	Decrement a memory location	N,Z
DEX	Decrement the X register	N,Z
DEY	Decrement the Y register	N,Z
ASL	Arithmetic Shift Left	N,Z,C
LSR	Logical Shift Right	N,Z,C
ROL	Rotate Left	N,Z,C
ROR	Rotate Right	N,Z,C
JMP	Jump to another location	 
JSR	Jump to a subroutine	 
RTS	Return from subroutine	 
BCC	Branch if carry flag clear	 
BCS	Branch if carry flag set	 
BEQ	Branch if zero flag set	 
BMI	Branch if negative flag set	 
BNE	Branch if zero flag clear	 
BPL	Branch if negative flag clear	 
BVC	Branch if overflow flag clear	 
BVS	Branch if overflow flag set	 
CLC	Clear carry flag	C
CLD	Clear decimal mode flag	D
CLI	Clear interrupt disable flag	I
CLV	Clear overflow flag	V
SEC	Set carry flag	C
SED	Set decimal mode flag	D
SEI	Set interrupt disable flag	I
BRK	Force an interrupt	B
NOP	No Operation	 
RTI	Return from Interrupt	All

